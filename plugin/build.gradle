buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

// Plugin version is set in the root/build.gradle
group "org.grails.plugins"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "dk.brics.automaton:automaton:1.11-8"

    compile "org.grails:grails-core"
    compile "org.grails:grails-gorm-testing-support"
    compile "org.grails:grails-databinding"
    compile "org.grails:grails-datastore-gorm"
    console "org.grails:grails-console"

    //so we can run 'grails' and/or 'grails test-app' inside build-test-data
    profile "org.grails.profiles:web-plugin"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"

    testCompile "org.grails.plugins:hibernate5"
    testCompile "org.hibernate:hibernate-core:5.2.12.Final"
    testRuntime "com.h2database:h2"
    testRuntime "org.apache.tomcat:tomcat-jdbc"

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

// Enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

grailsPublish {
    githubSlug = 'longwa/build-test-data'
    license {
        name = 'Apache-2.0'
    }

    title = "Build Test Data Plugin"
    desc = "Enables the easy creation of test data by automatically satisfying common constraints"
    developers = [
        longwa: "Aaron Long",
        tednaleid: "Ted Naleid",
    ]
    issueTrackerUrl = "https://github.com/longwa/$project.name/issues"
    vcsUrl = "https://github.com/longwa/$project.name"
}
